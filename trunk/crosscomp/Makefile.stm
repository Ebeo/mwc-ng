#Derived from Atollic True Studio Makefile by Prof. Greg Egan 2012

#SHELL=bash

# System configuration - UNCOMMENT AS DESIRED

#Code Sourcery current gcc 4.6.x
#Specify full path below including trailing / to your arm-gcc toolchain unless it's in PATH
TCHAIN=
CC = $(TCHAIN)arm-none-eabi-gcc
CCP = $(TCHAIN)arm-none-eabi-g++
OPT = -Os
OBJCOPY = $(TCHAIN)arm-none-eabi-objcopy
AR = $(TCHAIN)arm-none-eabi-ar
RM = rm -rf

# Add .d to Make's recognized suffixes.
SUFFIXES += .d
#We don't need to clean up when we're making these targets
NODEPS:=clean tags svn

# Define output directory
OBJECT_DIR = obj/stm32
BIN_DIR = bin/stm32
OUT_FILE = mwc_ng
LINK_SCRIPT=stm32_flash.ld

# Assembler, Compiler and Linker flags and linker script settings
LINKER_FLAGS=-lm -mthumb -mcpu=cortex-m3 -Wl,--gc-sections -T$(LINK_SCRIPT) -static -Wl,-cref "-Wl,-Map=$(BIN_DIR)/$(OUT_FILE).map" -Wl,--defsym=malloc_getpagesize_P=0x1000
ASSEMBLER_FLAGS=-c $(OPT) -mcpu=cortex-m3 -mthumb -x assembler-with-cpp -Isrc -Ilib-arm/STM32F10x_StdPeriph_Driver/inc -Ilib-arm/CMSIS/CM3/CoreSupport -Ilib-arm/CMSIS/CM3/DeviceSupport/ST/STM32F10x
COMPILER_FLAGS=-c -g -mcpu=cortex-m3 $(OPT) -Wall -fno-strict-aliasing -ffunction-sections -fdata-sections -mthumb -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -Isrc -Ilib-arm/STM32F10x_StdPeriph_Driver/inc -Ilib-arm/CMSIS/CM3/CoreSupport -Ilib-arm/CMSIS/CM3/DeviceSupport/ST/STM32F10x -Ilib/MWC_PT -Ilib/MWC_MAVLINK -Ilib-arm/nvram

# Define sources and objects
LSRC := $(wildcard lib-arm/*/*/*/*/*/*/*.c) \
	$(wildcard lib-arm/*/*/*/*/*/*.c) \
	$(wildcard lib-arm/*/*/*/*/*.c) \
	$(wildcard lib-arm/*/*/*/*.c) \
	$(wildcard lib-arm/*/*/*.c) \
	$(wildcard lib-arm/*/*.c) \
  $(wildcard lib-arm/*.c)
LSRCP:= $(wildcard lib-arm/*/*/*/*/*/*/*.cpp) \
	$(wildcard lib-arm/*/*/*/*/*/*.cpp) \
	$(wildcard lib-arm/*/*/*/*/*.cpp) \
	$(wildcard lib-arm/*/*/*/*.cpp) \
	$(wildcard lib-arm/*/*/*.cpp) \
	$(wildcard lib-arm/*/*.cpp) \
  $(wildcard lib-arm/*.cpp)

LOBJS := $(LSRC:%.c=$(OBJECT_DIR)/%.o) $(LSRCP:%.cpp=$(OBJECT_DIR)/%.o)
LOBJS := $(LOBJS:%.S=$(OBJECT_DIR)/%.o)
LDEPS :=$(patsubst %.o,%.d,$(LOBJS))

SRC := $(wildcard  src/*.c)
SRCP:= $(wildcard  src/*.cpp)
SRCSASM := $(wildcard src/hal/baseflight_startups/startup_stm32f10x_md_gcc.s)

OBJS := $(SRC:%.c=$(OBJECT_DIR)/%.o) $(SRCP:%.cpp=$(OBJECT_DIR)/%.o) $(SRCSASM:%.s=$(OBJECT_DIR)/%.o)
OBJS := $(OBJS:%.S=$(OBJECT_DIR)/%.o)
DEPS := $(patsubst %.o,%.d,$(OBJS))

all: $(BIN_DIR)/$(OUT_FILE).elf
	$(OBJCOPY) -O ihex "$(BIN_DIR)/$(OUT_FILE).elf" "$(BIN_DIR)/$(OUT_FILE).hex"

upload: all
	cmd /c start STMFlashLoader.exe -c --pn 8  --br 256000 -i STM32_Med-density_64K  -e --all -d --v --fn $(BIN_DIR)/$(OUT_FILE).hex

$(BIN_DIR)/$(OUT_FILE).elf: $(LOBJS) $(OBJS)
	@echo Linking...
	@mkdir -p $(dir $@)
	$(CC) -o "$(BIN_DIR)/$(OUT_FILE).elf" $(LOBJS) $(OBJS)  $(LINKER_FLAGS)

#Don't create dependencies when we're cleaning, for instance
ifeq (0, $(words $(findstring $(MAKECMDGOALS), $(NODEPS))))
    #Chances are, these files don't exist.  GMake will create them and
    #clean up automatically afterwards
    -include $(DEPS)
    -include $(LDEPS)
endif

clean:
	$(RM) $(LOBJS)
	$(RM) $(LDEPS)
	$(RM) $(OBJS)
	$(RM) $(DEPS)
	$(RM) $(OBJECT_DIR)/*
	$(RM) $(BIN_DIR)/*

$(OBJECT_DIR)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) -MD $(COMPILER_FLAGS) $< -o $@

$(OBJECT_DIR)/%.o: %.cpp
	@mkdir -p $(dir $@)
	$(CCP) -MD $(COMPILER_FLAGS) $< -o $@

$(OBJECT_DIR)/%.o: %.s
	@mkdir -p $(dir $@)
	$(CC) -MD $(ASSEMBLER_FLAGS) $< -o $@

$(OBJECT_DIR)/%.o: %.S
	@mkdir -p $(dir $@)
	$(CC) -MD $(ASSEMBLER_FLAGS) $< -o $@

